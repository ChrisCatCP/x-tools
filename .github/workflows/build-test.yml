name: build-test
on:
  workflow_dispatch: # Enables manually

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    env:
      CR_PAT: ${{ secrets.CR_PAT }}
      QT_MODULES: 'qtcharts qtserialbus qtserialport qtwebsockets'
      QT_VERSION: 6.8.3
    steps:
      - name: Pull respository
        uses: actions/checkout@v4
      - name: Install Qt(android)
        uses: jurplel/install-qt-action@v4
        with:
          aqtversion: '==3.1.*'
          target: android
          arch: android_armv7
          host: linux
          dir: ${{ github.workspace }}
          modules: ${{env.QT_MODULES}}
          version: ${{ env.QT_VERSION }}
      - name: Install Qt(linux_gcc_64)
        uses: jurplel/install-qt-action@v4
        with:
          aqtversion: '==3.1.*'
          target: desktop
          arch: linux_gcc_64
          host: linux
          dir: ${{ github.workspace }}
          modules: ${{env.QT_MODULES}}
          version: ${{ env.QT_VERSION }}
      - name: build docker image
        run: | # https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2204-Readme.md
          echo $ANDROID_HOME
          sudo tree -L 2 $ANDROID_HOME
          sudo chmod -R 755 $JAVA_HOME_17_X64
          sudo chmod -R 755 $ANDROID_HOME
          sudo docker build -t x-tools-ubuntu-20.04-1:x86_64 . \
          -f docker/20.04-android/Dockerfile \
          --build-arg HOST_QT_ROOT=${{ github.workspace }}/Qt
      # - name: push docker image to github registry
      #   run: |
      #     echo ${{ env.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      #     docker rmi ghcr.io/x-tools-author/x-tools-ubuntu-20.04-1:x86_64 || true
      #     docker tag x-tools-ubuntu-20.04-1:x86_64 ghcr.io/x-tools-author/x-tools-ubuntu-20.04-1:x86_64
      #     docker push ghcr.io/x-tools-author/x-tools-ubuntu-20.04-1:x86_64